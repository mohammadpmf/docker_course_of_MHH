services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: "resume_db"
      POSTGRES_USER: "myhadiusername"
      POSTGRES_PASSWORD: "mypaS$$wor#"
    volumes:
      - postgres_data_resume:/var/lib/postgresql/data
    ports:
      - "5432:5432"  # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - resume_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "resume_db", "-U", "myhadiusername"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    restart: unless-stopped

  backend:
    build: ./backend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DEBUG: "True"
      DATABASE_URL: "postgresql://myhadiusername:mypaS%24wor%23@db:5432/resume_db"
    ports:
      - "8000:8000"
    networks:
      - resume_network
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - media_files:/app/media
      - static_files:/app/staticfiles
    command: sh -c "python manage.py migrate && gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 config.wsgi:application"

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - resume_network
    depends_on:
      - backend
    volumes:
      - ./frontend:/app


volumes:
  postgres_data_resume:
  media_files:
  static_files:

networks:
  resume_network:
    driver: bridge
